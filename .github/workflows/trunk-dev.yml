name: Integrate and deploy
on:
  push:
    branches:
      - main

env:
  REDIS_URL: redis@redis
jobs:
  unit-test:
    runs-on: ubuntu-20.04
    if: ${{ !env.ACT }}
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9, "3.10" ]

    steps:
      - name: Checkout HEAD
        uses: actions/checkout@v2.4.0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with tox
        if: ${{ !env.ACT }}
        run: tox

  get-commit-tag:
    needs: unit-test
    runs-on: ubuntu-20.04
    outputs:
      image_commit_tag: ${{ steps.vars.outputs.image_commit_tag }}
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "::set-output name=image_commit_tag::$(git rev-parse --short HEAD)"


  integration-tests:
    needs:
      - get-commit-tag
    env:
      ENV: integration
      GH_IMAGE_COMMIT_TAG: ${{ needs.get-commit-tag.outputs.image_commit_tag }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout HEAD
        uses: actions/checkout@v2.4.0
      - name: Install docker-compose
        if: ${{ env.ACT }}
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Compose environment
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml up -d
      - name: Test
        run: docker-compose exec -T app pytest tests

      - name: Stop docker
        if: ${{ env.ACT }}
        run: docker-compose down

  heroku-push-and-release:
    needs:
      - integration-tests
    runs-on: ubuntu-20.04
    steps:
      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh
      - name: Push images to Heroku
        run: |
          docker login --username=_ --password=$(heroku auth:token) registry.heroku.com
          docker push registry.heroku.com/cslgbt-mentor-match/web
          docker push registry.heroku.com/cslgbt-mentor-match/worker
      - name: Deploy to Heroku
        run: heroku container:release web worker
